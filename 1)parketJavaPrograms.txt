1)Write a program that counts duplicate characters from a given string.
public class Duplicatecount{ 
public static void main(String []args){
String s="Java"

CountDuplicates(s);
}
public static void CountDuplicates(String str){
Map<Character,Integer>map=new HashMap<Character,Integer>();
for(int i=0;i<str.length();i++){
char ch=str.charAt(i);
if(map.ContainsKey(ch)){
map.put(ch,map.get(ch)+1);
}else{
map.put(ch,1);
}
}System.out.println(map);
Set<Entry<Character,Integer>> enrtySet=map.EntrySet();
for(Entry<Character,Integer> entry:entrySet){
if(entry.getValue()>1){
System.out.println("Duplicate characters  "+enty.getKey()+"found "+entry.getValue());
}
}
}
}
2)Write a program that returns the first non-repeated character from a given string.
public class nonRepeat{
public static void main(String []args){
String s="Java"

nonRepeatCharacter(s);
}
public static void nonRepeatCharacter(String str){
Map<Character,Integer>map=new HashMap<Character,Integer>();
for(int i=0;i<str.length();i++){
char ch=str.charAt(i);
if(map.ContainsKey(ch)){
map.put(ch,map.get(ch)+1);
}else{
map.put(ch,1);
}
}System.out.println(map);
Set<Entry<Character,Integer>> enrtySet=map.EntrySet();
for(Entry<Character,Integer> entry:entrySet){
if(entry.getValue()=1){
System.out.println(entry.getKey());
break;
}
}
}
}
3) Write a program that reverses the letters of each word and a program that reverses the letters of each word and the words themselves.
public class ReverseString {

public static void main(String[] args) {
String s = "Welcome to java";
System.out.println(reverseword(s));
}
public static String reverseword(String st) {
String[] array = st.split(" ");
String output = "";
for (int i = 0; i < array.length; i++) {
String revword = "";

String word = array[i];
for (int j = word.length() - 1; j >= 0; j--) {

revword = revword + word.charAt(j);
// System.out.println(revword);
}
output = output + revword + " ";
			
}
return output;

}

}
4)Write a program that checks whether the given string contains only digits.
public class StringContainsOnlyDigits {

	public static void main(String[] args) {
		String st = "12abc54";
		System.out.println(checkDigit(st));
	}

	public static boolean checkDigit(String str) {

		// char ch = str.toCharArray();
		for (int i = 0; i < str.length(); i++) {
			char ch = str.charAt(i);

			if (!Character.isDigit(ch)) {
				return false;

			}

		}
		return true;

	}
}
5) Write a program that counts the number of vowels and consonants in a given string. Do this for the English language, which has five vowels (a, e, i, o, and u).
public class VowelsandConsonentCount {

	public static void main(String[] args) {
		String st = " lakshmi praveena";
		VelandConCheck(st);

	}

	public static void VelandConCheck(String str) {
		str = str.toUpperCase();
		int volcount = 0;
		int concount = 0;
		for (int i = 0; i < str.length(); i++) {
			char ch = str.charAt(i);

			if (ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U') {
				volcount++;
			} else if (ch > 'A' && ch < 'Z') {
				concount++;
			}

		}
		System.out.println("Vowel count is " + volcount);
		System.out.println("Consonent count is " + concount);

	}

}
6)Write a program that counts the occurrences of a certain character in a given string.
public class occurence{
public static void main (String[]args){
String s="Javaselenium";
}
public static void nonRepeatCharacter(String str,char letter){
Map<Character,Integer>map=new HashMap<Character,Integer>();
for(int i=0;i<str.length();i++){
char ch=str.charAt(i);
if(map.containsKey(ch)){
map.put(ch,map.get(ch)+1);
}else{
map.put(ch,1);
}
}System.out.println(map);
Set<Entry<Character,Integer>> enrtySet=map.EntrySet();
for(Entry<Character,Integer> entry:entrySet){
if(entry.getKey==letter){
System.out.println(entry.Value());
}
}
}
}

7) Write a program that removes all white spaces from the given string.
public class remove{
public static void main (String[]args){
String s="Java Selenium";
}
public stsatic void removewhite(String str){
String s="";
for(i=0;i<str.length();i++){
if(str.charAt(i)!=' ')&&(str.charAt(i)!='\t'){
s=s+charAt(i);
}
}
system.out.println(s);
}
}
8)Write a program that joins the given strings by the given delimiter.
public static void join(String s1,String s2, String s3){
String s4=String.join(" ",s1,s2,s3);
System.out.println(s4);
}
8)Write a program that determines whether the given string is a palindrome or not.
public static void main(String[]args){
String s="kayak"
;
}
public static void StringPlindrome(String str){
String s1="";
for(int i=str.length()-1,i>=0;i--){
s1=s1+tr.charAt(i);
}
System.out.println(s1);
if(str.equals(s1)){
System.out.println("Given string is palindrome");
}
else{
System.out.println("Given string is noy palindrome");
}
9)Write a program that removes the duplicate characters from the given string.
public static void main(String[]args){
string s="Java"

}
public static void removeDuplicates(String str){
Set<Character>set=new LinkedHashSet<Character>();
StringBuilder sb=new StringBuilder();
for(int i-0;i<str.length();i++){
set.add(str.charAt(i));
}
for(Character c:set){
sb.append(c);
}
System.out.println(sb);

10)Write a program that removes the given character from the given string.
public static void main(String[]args){
string s="Java";
}

public static void removechar(String str,char ch){
StringBulder sb=new StringBuilder();
for(int i=0;i<str.length();i++){
char c=str.charAt(i);
if(c!=ch){
sb.append(c);
}
}
System.out.println(sb);
}











 